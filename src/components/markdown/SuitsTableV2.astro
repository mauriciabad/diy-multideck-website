---
import Suit from './Suit.astro'
import { isSuitColor, isSuitEmoji } from './suits'
import TextWithBreaks from '../TextWithBreaks.astro'
import GenericTable from '../GenericTable.astro'
import ColorSuit from './ColorSuit.astro'
import { cn } from '../../lib/cn'

const rows = [
  ['🔥', 'Fi-re', 'Red', '0', '0...9 + XJQKA'],
  ['💧', 'Wa-ter', 'Blue', '1', '0...9 + XJQKA'],
  ['⭐', 'Stars', 'Ye-llow', '2', '0...9 + XJQKA'],
  ['☘️', 'Clubs', 'Gre-en', '3', '0...9 + XJQKA'],
  ['🍊', 'Oran-ges', 'O-ran-ge', '4', '0...9 + XJQKA'],
  ['🍆', 'Egg-plants', 'Pur-ple', '5', '0...9 + XJQKA'],
  ['💭', 'Clo-uds', 'Whi-te', '6', '0...9 + XJQKA'],
  ['🕷️', 'Spi-ders', 'Bla-ck', '7', '0...9 + XJQKA'],
  ['🌸', 'Flo-wers', 'Pi-nk', '8', '0...9'],
  ['💎', 'Dia-monds', 'Cy-an', '9', '0...9'],
  ['💩', 'Poops', 'Bro-wn', '10', '0...9'],
  ['🌈', 'Rainbows', 'Rain-bow', '11', '0...9'],
] as const satisfies string[][]
---

<GenericTable>
  <Fragment slot="thead">
    <tr>
      <th>I<wbr />con</th>
      <th class="border-l w-0">Emoji</th>
      <th class="border-l text-left pl-2">Na<wbr />me</th>
      <th class="border-l text-left pl-2">Co<wbr />lor</th>
      <th class="border-l">Id</th>
      <th class="border-l">Ra<wbr />nks</th>
    </tr>
  </Fragment>

  <Fragment slot="tbody">
    {
      rows.map((row, rowN) => {
        const colorId = row[2].toLowerCase().replace(/-/g, '')

        return (
          <tr
            class={cn('[&_td]:border-l first:[&_td]:border-l-0', {
              'bg-black/5 dark:bg-white/5': rowN % 2 === 0,
            })}
          >
            <td>
              {isSuitEmoji(row[0]) ? (
                <Suit emoji={row[0]} size="large-responsive" />
              ) : (
                row[0]
              )}
            </td>

            <td>{row[0]}</td>

            <td class="text-left pl-2">
              <TextWithBreaks text={row[1]} breakChar="-" />
            </td>
            <td class="text-left pl-2">
              <div class="flex items-center gap-1">
                {isSuitColor(colorId) && <ColorSuit color={colorId} noAlt />}
                <span class="grow">
                  <TextWithBreaks text={row[2]} breakChar="-" />
                </span>
              </div>
            </td>
            <td>{row[3]}</td>
            <td>{row[4]}</td>
          </tr>
        )
      })
    }
  </Fragment>
</GenericTable>
